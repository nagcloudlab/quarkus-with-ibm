
-----------------------------------------------------------------
Quarkus Overview
-----------------------------------------------------------------

-> what , why & how it differ from existing solutions

-----------------------------------------------------------------
1.introduction
-----------------------------------------------------------------

1. scaffolding a Quarkus project with Maven

 - mvn io.quarkus:quarkus-maven-plugin:1.7.2.Final:create

2. scaffolding a Quarkus project with Gradle

 - mvn io.quarkus:quarkus-maven-plugin:1.7.2.Final:create -DbuildTool=gradle

3. scaffolding a Quarkus project with Quarkus start coding website

4. scaffolding a Quarkus project with VS-code / Eclipse / Intellij-IDEA


-----------------------------------------------------------------
2.developer friendly
-----------------------------------------------------------------

1. Live Reloading with Dev Mode


-----------------------------------------------------------------
3. Developing RESTful services
-----------------------------------------------------------------

using JAX-RS spec

     implementation(s)

        - RESTEasy    ( jboss community )
 

1. creating a simple REST api Endpoint
2. extracting request parameters
    -  query/path/header/cookie/form/matrix parameters
3. using semantic HTTP Response codes
    - https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
4. binding HTTP methods
5. enabling cross-origin-resource-sharing ( cors )
6. Reactive Routes to process HTTP requests  ( yet to cover )
7. Intercepting HTTP requests using Vertx filters

-----------------------------------------------------------------

imp-note :
in quarkus, we can write HTTP Endpoints in 2 ways


    => JAX-RS resource
    => reactive routes using Vertx

-----------------------------------------------------------------
4. configuration with Quarkus
-----------------------------------------------------------------


  1. configuring the application with custom properties
  2. Accessing configuration properties programmatically
  3. configuring with profiles

      dev, test, prod

  4. configuring with custom profiles

   ......


   





 



